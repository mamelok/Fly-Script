local player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local FlySpeed = 50 -- Adjust the speed as needed
local FlyLoop
local flying = false

local function startFlying()
    if not FlyLoop then
        FlyLoop = RunService.Stepped:Connect(function()
            spawn(function()
                pcall(function()
                    local speed = FlySpeed
                    local velocity = Vector3.new(0, 1, 0)

                    if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                        velocity = velocity + (workspace.CurrentCamera.CFrame.LookVector * speed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                        velocity = velocity + (workspace.CurrentCamera.CFrame.RightVector * -speed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                        velocity = velocity + (workspace.CurrentCamera.CFrame.LookVector * -speed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                        velocity = velocity + (workspace.CurrentCamera.CFrame.RightVector * speed)
                    end

                    player.Character.HumanoidRootPart.Velocity = velocity
                    player.Character.Humanoid:ChangeState("Freefall")
                end)
            end)
        end)
    end
end

local function stopFlying()
    if FlyLoop then
        FlyLoop:Disconnect()
        FlyLoop = nil
        player.Character.Humanoid:ChangeState("Landing")
    end
end

-- Toggle fly with "V" key
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.V then
        flying = not flying
        if flying then
            startFlying()
        else
            stopFlying()
        end
    end
end)

-- Return functions to control flying
return {
    StartFlying = startFlying,
    StopFlying = stopFlying
}
